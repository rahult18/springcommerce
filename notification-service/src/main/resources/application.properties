spring.application.name=notification-service
server.port=8083

#kafka consumer props
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8085
spring.kafka.consumer.properties.specific.avro.reader=true

# Add the producer's package to trusted packages
spring.kafka.consumer.properties.spring.json.trusted.packages=com.springcommerce.notification_service.order_service.event,com.springcommerce.order_service.event

# Update type mapping to explicitly map between the two
spring.kafka.consumer.properties.spring.json.type.mapping=com.springcommerce.order_service.event.OrderPlacedEvent:com.springcommerce.notification_service.order_service.event.OrderPlacedEvent

# Mail Properties
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=
spring.mail.password=
spring.mail.protocol=smtp

#observability endpoints
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=notification-service
management.tracing.sampling.probability=1.0
# by default spring will only generate tracing for 10% of requests, but we want to trace for all the requests
